{"version":3,"sources":["components/NavMenu.js","actions.js","containers/NavMenuContainer.js","components/Header.js","containers/HeaderContainer.js","components/Notfix.js","components/Tabs.js","components/Page.js","components/Posts.js","containers/PostsContainer.js","components/ArticleBox.js","containers/ArticleBoxContainer.js","components/Login.js","containers/LoginContainer.js","components/Register.js","containers/RegisterContainer.js","components/WritePost.js","containers/WritePostContainer.js","highlight.js","components/Post.js","containers/PostContainer.js","components/Article.js","components/Footer.js","components/App.js","reducers/auth.js","reducers/post.js","reducers/index.js","api.js","epics/postEpics.js","epics/authEpics.js","epics/index.js","store.js","index.js"],"names":["withRouter","to","children","history","path","exact","match","className","onClick","push","EasyActions","GET_POST_LIST","type","payload","GET_POST_LIST_RESULT","error","list","GET_POST","id","GET_POST_RESULT","item","CREATE_POST","CREATE_POST_RESULT","CLEAR_CREATE_ERR","DELETE_POST","DELETE_POST_RESULT","CLEAR_DELETE_ERROR","UPDATE_POST","UPDATE_POST_RESULT","CREATE_CATEGORY","CREATE_CATEGORY_RESULT","GET_CATEGORY_LIST","GET_CATEGORY_LIST_RESULT","REGISTER","user","REGISTER_RESULT","result","LOGIN","LOGIN_RESULT","LOGOUT","LOGOUT_RESULT","GET_USER","GET_USER_RESULT","err","Actions","Constants","mapDispatchToProps","logout","connect","store","isLoadingLogout","auth","logoutResult","props","isLogin","getUser","getUserResult","useEffect","Notfix","Tabs","Page","postList","getPostList","isLoadingGetPostList","getPostListError","map","title","createdAt","key","moment","format","post","ArticleBox","isLoadingGetUser","Login","login","useState","username","password","nickname","setUser","onChangeUser","e","target","name","value","onSubmit","preventDefault","console","log","htmlFor","onChange","href","isLoadingLogin","loginResult","Register","register","isLoadingRegister","registerResult","WritePost","createCategory","createPost","categoryList","getCategoryList","content","category","setPost","categoryId","rows","CodeBlock","this","language","style","atomDark","showLineNumbers","PureComponent","defaultProps","Post","getPost","linkTo","isLoadingGetPost","getPostError","updatePostError","deletePostError","clearDeleteErr","updatePost","isRequestAgain","body","text","setText","edit","setEdit","titleText","contentText","params","handleEdit","onChangeText","alert","source","renderers","code","window","confirm","deletePost","isLoadingUpdatePost","isLoadingDeletePost","Article","component","Footer","locale","App","defaultState","loginStatus","isLoadingCreatePost","createPostError","reducer","combineReducers","state","action","ActionTypes","isLoadingCreateCategory","createCategoryError","isLoadingGetCategory","getCategoryError","axios","defaults","withCredentials","instance","create","baseURL","action$","pipe","ofType","switchMap","from","get","res","data","catchError","of","message","values","delete","put","registerEpic","mergeMap","loginEpic","getUserEpic","epics","authEpics","postEpics","reduce","arr","epic","concat","keysIn","rootEpic","combineEpics","logger","createLogger","duration","collapsed","epicMiddleware","createEpicMiddleware","createStore","reducers","applyMiddleware","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.63d7f04d.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\n\nconst NavMenu = ({ to, children, history }) => {\n  return (\n    <Route\n      path={to}\n      exact={true}\n      children={({ match }) => (\n        <li className={`nav-menu ${match ? \"nav-current\" : \"\"}`} onClick={() => {\n          history.push(to)\n        }}>\n          { children }\n        </li>\n      )}\n    />\n  );\n};\n\nexport default withRouter(NavMenu);","import EasyActions from \"redux-easy-actions\";\r\n\r\nconst { Actions, Constants } = EasyActions({\r\n  //post\r\n  GET_POST_LIST(type, payload) {\r\n    return { type, payload };\r\n  },\r\n\r\n  GET_POST_LIST_RESULT(type, error, list) {\r\n    return { type, error, list };\r\n  },\r\n\r\n  GET_POST(type, id) {\r\n    return { type, id };\r\n  },\r\n\r\n  GET_POST_RESULT(type, error, item) {\r\n    return { type, error, item };\r\n  },\r\n\r\n  CREATE_POST(type, payload) {\r\n    return { type, payload };\r\n  },\r\n\r\n  CREATE_POST_RESULT(type, error) {\r\n    return { type, error };\r\n  },\r\n\r\n  CLEAR_CREATE_ERR(type) {\r\n    return { type }\r\n  },\r\n\r\n  DELETE_POST(type, id) {\r\n    return { type, id };\r\n  },\r\n\r\n  DELETE_POST_RESULT(type, error) {\r\n    return { type, error };\r\n  },\r\n\r\n  CLEAR_DELETE_ERROR(type) {\r\n    return { type }\r\n  },\r\n\r\n  UPDATE_POST(type, id, payload) {\r\n    return { type, id, payload };\r\n  },\r\n\r\n  UPDATE_POST_RESULT(type, error) {\r\n    return { type, error };\r\n  },\r\n\r\n  // Category\r\n  CREATE_CATEGORY(type, payload) {\r\n    return { type, payload };\r\n  },\r\n\r\n  CREATE_CATEGORY_RESULT(type, error) {\r\n    return { type, error };\r\n  },\r\n\r\n  GET_CATEGORY_LIST(type, payload) {\r\n    return { type, payload };\r\n  },\r\n\r\n  GET_CATEGORY_LIST_RESULT(type, error, list) {\r\n    return { type, error, list };\r\n  },\r\n\r\n  // register\r\n  REGISTER(type, user) {\r\n    return { type, user };\r\n  },\r\n\r\n  REGISTER_RESULT(type, result) {\r\n    return { type, result };\r\n  },\r\n\r\n  LOGIN(type, user) {\r\n    return { type, user };\r\n  },\r\n\r\n  LOGIN_RESULT(type, result) {\r\n    return { type, result };\r\n  },\r\n\r\n  LOGOUT(type) {\r\n    return { type };\r\n  },\r\n\r\n  LOGOUT_RESULT(type, result) {\r\n    return { type, result };\r\n  },\r\n\r\n  // user\r\n  GET_USER(type, payload) {\r\n    return { type, payload };\r\n  },\r\n\r\n  GET_USER_RESULT(type, err, result) {\r\n    return { type, err, result };\r\n  },\r\n\r\n\r\n});\r\n\r\nexport { Actions, Constants as ActionTypes };\r\n","import React from 'react';\nimport NavMenu from '../components/NavMenu';\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions\";\n\nconst NavMenuContainer = (props) => <NavMenu {...props}/>\n\nconst mapStateToProps = store => ({\n  isLoadingLogout: store.auth.isLoadingLogout,\n  logoutResult: store.auth.logoutResult,\n});\n\nconst mapDispatchToProps = {\n  logout: Actions.LOGOUT,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavMenuContainer);\n","import React, { useEffect } from 'react';\nimport NavMenu from '../containers/NavMenuContainer';\nimport { withRouter } from 'react-router-dom';\n\n// import { useSession } from  'react-use-session';\n\n// import useSession, { UseSessionProvider } from 'react-session-hook';\n\n\nconst Header = ({ history, isLogin, logout, getUser, getUserResult }) => {\n  // const { session, save, clear } = useSession('my-app');\n\n  useEffect(() => {\n    getUser()\n  }, [getUser])\n\n  return (\n    <header className=\"App-header\">\n      <nav className=\"App-header-nav\">\n        <div className=\"nav-center\">\n          <div className=\"nav-menus\">\n            <div className=\"nav-left\">\n              <div className=\"nav-logo\">Blog</div>\n              <NavMenu to='/'>首頁</NavMenu>\n              <NavMenu to='/write-post'>發文</NavMenu>\n            </div>\n\n            <div className=\"nav-right\">\n              <div className=\"nav-menu\"></div>\n              <NavMenu to='/login'>登入</NavMenu>\n              <NavMenu to='/regist'>註冊</NavMenu>\n              <div className=\"nav-menu\" onClick={() => {\n                logout()\n                history.push('/')\n              }}>登出</div>\n            </div>\n\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"header-img-box\"></div>\n    </header>\n  );\n};\n\nexport default withRouter(Header);","import React from 'react';\nimport Header from '../components/Header';\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions\";\n\nconst HeaderContainer = (props) => <Header {...props}/>\n\nconst mapStateToProps = store => ({\n  isLogin: store.auth.isLogin,\n  isLoadingLogout: store.auth.isLoadingLogout,\n  logoutResult: store.auth.logoutResult,\n  getUserResult: store.auth.getUserResult,\n});\n\nconst mapDispatchToProps = {\n  logout: Actions.LOGOUT,\n  getUser: Actions.GET_USER,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\n","import React from 'react';\n\nconst Notfix = () => {\n  return (\n    <div className=\"notfix\">\n      <form className=\"search-form\">\n        <input className=\"search-form__input\"></input>\n        <button className=\"search-form__submit\">\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n\n      <div className=\"your-profile\">\n        <div className=\"profile-image\">\n          <div className=\"profile-avatar\"></div>\n        </div>\n        <div className=\"profile-name\">Julypenguin</div>\n        <div className=\"profile-content\">這是一個關於旅遊的 blog</div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Notfix;","import React from 'react';\n\nconst Tabs = () => {\n  return (\n    <div className=\"tabs\">\n      <div className=\"tab tab-current\">韓國旅遊</div>\n      <div className=\"tab\">日本旅遊</div>\n    </div>\n  );\n};\n\nexport default Tabs;","import React from 'react';\n\nconst Page = () => {\n  return (\n    <div className=\"page-numbers\">\n      <div className=\"page-number page-current\">1</div>\n      <div className=\"page-number\">2</div>\n      <div className=\"page-number\">3</div>\n    </div>\n  );\n};\n\nexport default Page;","import React, { useEffect, Fragment } from 'react';\nimport moment from \"moment\";\nimport { Route, withRouter } from 'react-router-dom';\nimport Page from './Page';\n\nconst Posts = ({ history, postList, isLoadingGetPostList, getPostListError, getPostList }) => {\n\n  useEffect(() => {\n    getPostList()\n  }, [getPostList])\n\n  return (\n    <div className=\"post-contents\">\n\n    { postList.map(({ id, title, createdAt }) => (\n\n      <div \n        className=\"post-card\"\n        key={id}\n        onClick={() =>history.push(`/posts/${id}`)}\n      >\n        <div className=\"post-card-img\"></div>\n        <div className=\"post-card-info\">\n          <div className=\"post-card-date\">{moment(createdAt).format(\"LLLL\")}</div>\n          <div className=\"post-card-title\">{ title }</div>\n        </div>\n      </div>\n\n    ))}\n\n      <Page />\n    </div>\n  );\n};\n\nexport default withRouter(Posts);","import React from 'react';\nimport Posts from '../components/Posts';\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions\";\n\nconst PostsContainer = (props) => <Posts {...props}/>\n\nconst mapStateToProps = store => ({\n  postList: store.post.postList,\n  isLoadingGetPostList: store.post.isLoadingGetPostList,\n  getPostListError: store.post.getPostListError,\n  // postList: store.post.postList,\n});\n\nconst mapDispatchToProps = {\n  getPostList: Actions.GET_POST_LIST,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsContainer);\n","import React, { useEffect, Fragment } from 'react';\nimport Notfix from './Notfix';\nimport Tabs from './Tabs';\nimport Posts from '../containers/PostsContainer';\nimport { Route } from 'react-router-dom';\n\nconst ArticleBox = ({ history, getUser, isLoadingGetUser, getUserResult}) => {\n  // useEffect(() => {\n  //   getUser()\n  // }, [getUser])\n\n\n  return (\n    <div className=\"article-box\">\n      <div className=\"content\">\n        <Tabs />\n        <Posts />\n      </div>\n\n      <Notfix />\n    </div>\n  );\n};\n\nexport default ArticleBox;","import React from 'react';\nimport ArticleBox from '../components/ArticleBox';\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions\";\n\nconst ArticleBoxContainer = (props) => <ArticleBox {...props}/>\n\nconst mapStateToProps = store => ({\n  isLoadingGetUser: store.auth.isLoadingGetUser,\n  getUserResult: store.auth.getUserResult,\n  // postList: store.post.postList,\n});\n\nconst mapDispatchToProps = {\n  getUser: Actions.GET_USER,\n  // getPostList: Actions.GET_POST_LIST,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleBoxContainer);","import React, { useState, useEffect } from 'react';\n// import { useSession } from  'react-use-session';\n// import session from 'express-session';\n// import useSession, { UseSessionProvider } from 'react-session-hook';\n \nconst Login = ({ login, postList, getPostList, history, getUserResult, getUser }) => {\n  const [user, setUser] = useState({ username: '', password: '', nickname: ''})\n  const { username, password } = user\n  // const { session, save, clear } = useSession('my-app');\n  // const session = useSession();\n\n  const onChangeUser = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    login(user)\n    // save('isTOKEN');\n    console.log('yaya')\n    history.push('/')\n\n    // session.setSession({ token: 'newToken' })\n  }\n\n  useEffect(() => {\n    getUser()\n  },[getUser])\n\n\n  return (\n    <div className=\"wrapper\">\n      <article className=\"article login\">\n        <h2 className=\"errorMessage\"></h2>\n        <h2 className=\"title\">會員登入</h2>\n        <form className=\"userBox\" onSubmit={handleLogin}>\n          <label htmlFor=\"username\">帳號：</label>\n          <input type=\"text\" name=\"username\" id=\"username\" value={username} onChange={onChangeUser}/>\n          <label htmlFor=\"password\">密碼：</label>\n          <input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={onChangeUser}/>\n          <input className=\"submit edit__btn\" type=\"submit\" value=\"登入\" />\n          <div className=\"clearfix\"></div>\n        </form>\n        \n        <a className=\"toRegister\" href=\"/register\">還不是會員？</a>\n        <br />\n        <a className=\"back__btn\" href=\"/comments\">回到文章列</a>\n      </article>\n    </div>\n  );\n}\n \n// export const App = () => (\n//   <UseSessionProvider>\n//     <Component />\n//   </UseSessionProvider>\n// )\n\n// import React from 'react';\n// import useSession, { UseSessionProvider } from 'react-session-hook';\n\n// const login = () => {\n//   const session = useSession();\n\n//   const handleLogin = () => session.setSession({ token: 'newToken' })\n\n\n//   return (\n//     <div className=\"wrapper\">\n//       <article className=\"article login\">\n//         <h2 className=\"errorMessage\"></h2>\n//         <h2 className=\"title\">會員登入</h2>\n\n//         <form className=\"userBox\" action=\"/login\" method=\"POST\">\n//           <label htmlFor=\"username\">帳號：</label>\n//           <input type=\"text\" name=\"username\" id=\"username\" />\n//           <label htmlFor=\"password\">密碼：</label>\n//           <input type=\"password\" name=\"password\" id=\"password\" />\n//           <input className=\"submit edit__btn\" type=\"submit\" value=\"登入\" />\n//           <div className=\"clearfix\"></div>\n//         </form>\n        \n//         <a className=\"toRegister\" href=\"/register\">還不是會員？</a>\n//         <br />\n//         <a className=\"back__btn\" href=\"/comments\">回到文章列</a>\n//       </article>\n//     </div>\n//   );\n// };\n\nexport default Login;","import React from 'react';\nimport Login from '../components/Login';\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions\";\n\nconst LoginContainer = props => <Login {...props} />\n\nconst mapStateToProps = store => ({\n  isLoadingLogin: store.auth.isLoadingLogin,\n  loginResult: store.auth.loginResult,\n  getUserResult: store.auth.getUserResult,\n});\n\nconst mapDispatchToProps = {\n  login: Actions.LOGIN,\n  getUser: Actions.GET_USER,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);","import React, { useState, useEffect } from 'react';\n\nconst Register = ({ register, isLoadingRegister, registerResult, getPostList, postList }) => {\n\n  const [user, setUser] = useState({ username: '', password: '', nickname: ''})\n  const { username, password, nickname } = user\n\n  const onChangeUser = e => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handleRegist = (e) => {\n    e.preventDefault();\n    register(user)\n    // console.log('user', user)\n  }\n\n  // useEffect(() => {\n    \n  // }, [])\n\n  return (\n    <div className=\"wrapper\">\n      <article className=\"article register\">\n        <h2 className=\"errorMessage\"></h2>\n        <h2 className=\"title\">會員註冊</h2>\n        <form className=\"userBox\" onSubmit={handleRegist}>\n          <label htmlFor=\"nickname\">暱稱：</label>\n          <input type=\"text\" name=\"nickname\" id=\"nickname\" value={nickname} onChange={onChangeUser}/>\n          <label htmlFor=\"username\">帳號：</label>\n          <input type=\"text\" name=\"username\" id=\"username\" value={username} onChange={onChangeUser}/>\n          <label htmlFor=\"password\">密碼：</label>\n          <input type=\"password\" name=\"password\" id=\"password\" value={password} onChange={onChangeUser}/>\n          <input className=\"submit edit__btn\" type=\"submit\" value=\"註冊\" />\n          <div className=\"clearfix\"></div>\n        </form>\n        \n        <a className=\"toLogin\" href=\"/login\">已經是會員？</a>\n        <br />\n        <a className=\"back__btn\" href=\"/comments\">回到文章列</a>\n      </article>\n    </div>\n  );\n};\n\nexport default Register;","import React from 'react';\nimport Register from '../components/Register';\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions\";\n\n\nconst RegisterContainer = props => <Register {...props} />\n\nconst mapStateToProps = store => ({\n  isLoadingRegister: store.auth.isLoadingRegister,\n  registerResult: store.auth.registerResult,\n  // postList: store.post.postList,\n});\n\nconst mapDispatchToProps = {\n  register: Actions.REGISTER,\n  // getPostList: Actions.GET_POST_LIST,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterContainer);","import React, { useState, useEffect } from 'react';\n\nconst WritePost = ({ createCategory, createPost, categoryList, getCategoryList }) => {\n  const [post, setPost] = useState({\n    title: '',\n    content: '',\n    category: '',\n  })\n\n  const { title, content, categoryId } = post\n\n  const onChange = (key, value) => {\n    setPost({\n      ...post,\n      [key]: value,\n    })\n  }\n\n  const postSubmit = (e) => {\n    e.preventDefault();\n    createPost(post)\n  }\n\n  useEffect(() => {\n    getCategoryList()\n  }, [getCategoryList])\n\n  return (\n    <div>    \n      <form className=\"writeComment__form\" onSubmit={postSubmit}>\n        <label className=\"writeComment__label\" htmlFor=\"author\">文章分類：</label>\n        <select id=\"category\" value={categoryId} onChange={(e) => onChange('categoryId', e.target.value)}>\n\n        {categoryList.map(({ id, category }) => (\n\n          <option key={id} value={id} >{category}</option>\n          \n        ))}\n          \n        </select>\n\n        <label className=\"writeComment__label\" htmlFor=\"title\">文章標題：</label>\n        <input \n          className=\"writeComment__input\"\n          value={title}\n          onChange={(e) => onChange('title', e.target.value)}\n          id=\"title\"\n        />\n\n        <label className=\"writeComment__label\" htmlFor=\"article-body\">內文：</label>\n        <textarea\n          className=\"writeComment__textarea\"\n          value={content}\n          onChange={(e) => onChange('content', e.target.value)}\n          id=\"article-body\"\n          rows=\"50\"\n        />\n\n        <div className=\"flex-end\">\n          <button className=\"writeComment__submit\" type=\"submit\">發文囉</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default WritePost;","import React from 'react';\nimport WritePost from '../components/WritePost';\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions\";\n\nconst WritePostContainer = (props) => <WritePost {...props}/>\n\nconst mapStateToProps = store => ({\n  // isLoadingRegister: store.auth.isLoadingRegister,\n  // registerResult: store.auth.registerResult,\n  categoryList: store.post.categoryList,\n});\n\nconst mapDispatchToProps = {\n  createCategory: Actions.CREATE_CATEGORY,\n  createPost: Actions.CREATE_POST,\n  getCategoryList: Actions.GET_CATEGORY_LIST,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WritePostContainer);\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string\n  };\n\n  static defaultProps = {\n    language: null,\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter \n        language={language} \n        style={atomDark} \n        showLineNumbers=\"true\"\n      >\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;","import React, { useState, useEffect, Fragment } from 'react';\nimport Notfix from './Notfix';\nimport moment from \"moment\";\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../highlight';\n\n// import htmlParser from 'react-markdown/plugins/html-parser'\n\n\n\nconst Post = ({ history, match, getPost, post, isLoadingGetPost, getPostError, linkTo, updatePostError, deletePostError, clearDeleteErr, updatePost, isRequestAgain }) => {\n\n  const [text, setText] = useState({ title: '', body: '' });\n  const [edit, setEdit] = useState(false);\n\n  const { title, content, createdAt } = post;\n  const { title: titleText, content: contentText } = text;\n  const { id } = match.params;\n\n  const handleEdit = () => {\n    setEdit(!edit);\n  }\n\n  const handleCancel = () => {\n    handleEdit();\n  }\n\n  const handleDelete = () => {\n    const isDelete = window.confirm('真的要刪除嗎？')\n    if (isDelete) {\n      // deletePost(id);\n    }\n  }\n\n  const handleUpdate = () => {\n    updatePost(id, {\n      title: titleText,\n      content: contentText,\n    });\n    handleEdit();\n  }\n\n  const onChangeText = (key, value) => {\n    setText({\n      ...text,\n      [key]: value,\n    })\n  }\n\n  // const parseHtml = htmlParser({\n  //   isValidNode: node => node.type !== 'script',\n  //   processingInstructions: [/* ... */]\n  // })\n\n  useEffect(() => {\n    if (!linkTo) {\n      getPost(id);\n      setText({title, content});\n    }\n    if (updatePostError) alert('更新失敗，請稍後再試');\n    if (updatePostError) alert(updatePostError);\n    if (deletePostError) alert('刪除失敗，請稍後再試')\n    if (linkTo) history.push('/articles');\n    return () => {\n      clearDeleteErr()\n    }\n  },[clearDeleteErr, content, deletePostError, getPost, history, id, linkTo, title, updatePostError, isRequestAgain])\n\n  return (\n    <main className=\"main\">\n      <div className=\"content\">\n        <div className=\"single-post-outer\">\n          <div className=\"single-post\">\n\n        { !edit \n          ? <Fragment>\n              <h5>{moment(createdAt).format(\"LLLL\")}</h5>\n              <h1 className=\"single-post-title\">{ title }</h1>\n              <ReactMarkdown \n                className=\"single-post-content\"\n                source={content}\n                renderers={{ code: CodeBlock }}\n              />\n            </Fragment>\n          : <Fragment>\n              <textarea className=\"single-post-title\" value={titleText} onChange={(e) => onChangeText('title', e.target.value)} />\n              <textarea className=\"single-post-content\" rows=\"27\" value={contentText} onChange={(e) => onChangeText('content', e.target.value)} />\n            </Fragment>\n        }\n\n            <div className=\"option__btn\">\n\n              <div className=\"back__btn\" onClick={() => history.push('/')}>上一頁</div>\n\n            {\n              !edit\n                ? <div>\n                    <div className=\"edit__btn\" onClick={handleEdit}>編輯</div>\n                    <div className=\"del__btn\"　onClick={handleDelete}>刪除</div>\n                  </div>\n                : <div>\n                    <div className=\"ok__btn\" onClick={handleUpdate}>確認</div>\n                    <div className=\"cancel__btn\" onClick={handleCancel}>取消</div> \n                  </div>\n            }\n\n            </div>\n          </div>\n        </div>\n\n\n\n\n\n\n      </div>\n      <Notfix />\n    </main>\n  );\n};\n\nexport default Post;","import React from 'react';\nimport Post from '../components/Post';\nimport { connect } from \"react-redux\";\nimport { Actions } from \"../actions\";\n\nconst PostContainer = (props) => <Post {...props} />\n\nconst mapStateToProps = store => ({\n  post: store.post.post,\n  isLoadingGetPost: store.post.isLoadingGetPost,\n  isLoadingUpdatePost: store.post.isLoadingUpdatePost,\n  isLoadingDeletePost: store.post.isLoadingDeletePost,\n  isRequestAgain: store.post.isRequestAgain,\n  getPostError: store.post.getPostError,\n  updatePostError: store.post.updatePostError,\n  deletePostError: store.post.deletePostError,\n  linkTo: store.post.linkTo,\n});\n\nconst mapDispatchToProps = {\n  getPost: Actions.GET_POST,\n  updatePost: Actions.UPDATE_POST,\n  deletePost: Actions.DELETE_POST,\n  clearDeleteErr: Actions.CLEAR_DELETE_ERROR,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostContainer);\n","import React from 'react';\nimport ArticleBox from '../containers/ArticleBoxContainer';\nimport Login from '../containers/LoginContainer.js';\nimport Register from '../containers/RegisterContainer';\nimport { Route } from 'react-router-dom';\nimport WritePost from '../containers/WritePostContainer';\nimport Post from '../containers/PostContainer';\n\n\nconst Article = () => {\n  return (\n    <article className=\"App-article\">\n      <Route exact path=\"/\" component={ArticleBox} />\n      <Route path=\"/posts/:id\" component={Post} />\n      <Route path=\"/write-post\" component={WritePost} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/regist\" component={Register} />\n    </article>\n  );\n};\n\nexport default Article;\n\n// <Route exact path=\"/\" component={ArticleBox} />\n// <Route path=\"/home\" component={ArticleBox} />\n\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      footer\n    </footer>\n  );\n};\n\nexport default Footer;","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Header from '../containers/HeaderContainer';\nimport Article from './Article';\nimport Footer from './Footer';\nimport moment from \"moment\";\nimport \"moment/locale/zh-tw\";\n\nmoment.locale(\"zh-tw\");\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Article />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from \"../actions\";\n\nconst defaultState = {\n  error: null,\n  loginStatus: \"LOADING\",\n  isLogin: false,\n  user: null,\n  isLoadingRegister: false,\n  registerResult: null,\n  isLoadingGetUser: false,\n  isLoadingLogin: false,\n  loginResult: null,\n  isLoadingLogout: false,\n  logoutResult: null,\n  getUserResult: {},\n};\n\nfunction authReducer(state = defaultState, action) {\n  switch (action.type) {\n    // case ActionTypes.SET_CHECK_LOGIN_STATUS:\n    //   return {\n    //     ...state,\n    //     loginStatus: action.status\n    //   };\n\n    // case ActionTypes.SET_USER_AUTHENTICATED:\n    //   return {\n    //     ...state,\n    //     isLogin: action.isLogin\n    //   };\n\n    // case ActionTypes.SET_USER:\n    //   return {\n    //     ...state,\n    //     user: action.user,\n    //     isLoadingGetUser: false\n    //   };\n\n    case ActionTypes.LOGOUT:\n      return {\n        ...state,\n        isLogin: false,\n        user: null\n      };\n\n    case ActionTypes.REGISTER:\n      return {\n        ...state,\n        isLoadingRegister: true,\n        registerResult: null\n      };\n\n    case ActionTypes.REGISTER_RESULT:\n      return {\n        ...state,\n        isLoadingRegister: false,\n        registerResult: action.result\n      };\n\n    case ActionTypes.LOGIN:\n      return {\n        ...state,\n        // isLogin: true,\n        isLoadingLogin: true,\n        loginResult: null\n      };\n\n    case ActionTypes.LOGIN_RESULT:\n      return {\n        ...state,\n        isLogin: true,\n        isLoadingLogin: false,\n        loginResult: action.result || {},\n      };\n\n    // case ActionTypes.LOGOUT:\n    //   return {\n    //     ...state,\n    //     isLoadingLogout: true,\n    //     logoutResult: null\n    //   };\n\n    // case ActionTypes.LOGOUT_RESULT:\n    //   return {\n    //     ...state,\n    //     isLoadingLoout: false,\n    //     logoutResult: action.result\n    //   };\n\n    // case ActionTypes.GET_CURRENT_USER:\n    //   return {\n    //     ...state,\n    //     isLoadingGetUser: true\n    //   };\n\n    // case ActionTypes.GET_USER_FAILED:\n    //   return {\n    //     ...state,\n    //     isLoadingGetUser: false\n    //   };\n    case ActionTypes.GET_USER:\n      return {\n        ...state,\n        isLoadingGetUser: true,\n        getUserResult: {},\n      };\n\n    case ActionTypes.GET_USER_RESULT:\n      return {\n        ...state,\n        isLoadingGetUser: false,\n        getUserResult: action.result\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport { authReducer, defaultState };\n","import { ActionTypes } from \"../actions\";\r\n\r\nconst defaultState = {\r\n  postList: [],\r\n  categoryList: [],\r\n  post: {},\r\n  isLoadingGetPostList: false,\r\n  isLoadingGetPost: false,\r\n  isLoadingCreatePost: false,\r\n  isLoadingDeletePost: false,\r\n  isLoadingUpdatePost: false,\r\n  getPostListError: null,\r\n  getPostError: null,\r\n  updatePostError: null,\r\n  createPostError: null,\r\n  deletePostError: null,\r\n  isRequestAgain: false,\r\n  linkTo: false,\r\n};\r\n\r\nfunction postReducer(state = defaultState, action) {\r\n  switch (action.type) {\r\n    case ActionTypes.GET_POST_LIST:\r\n      return {\r\n        ...state,\r\n        isLoadingGetPostList: true,\r\n        getPostListError: null\r\n      };\r\n\r\n    case ActionTypes.GET_POST_LIST_RESULT:\r\n      return {\r\n        ...state,\r\n        isLoadingGetPostList: false,\r\n        getPostListError: action.error,\r\n        postList: action.list || []\r\n      };\r\n\r\n    case ActionTypes.GET_POST:\r\n      return {\r\n        ...state,\r\n        isLoadingGetPost: true,\r\n        getPostError: null\r\n      };\r\n\r\n    case ActionTypes.GET_POST_RESULT:\r\n      return {\r\n        ...state,\r\n        isLoadingGetPost: false,\r\n        getPostError: action.error,\r\n        post: action.item || {}\r\n      };\r\n\r\n    case ActionTypes.CREATE_POST:\r\n      return {\r\n        ...state,\r\n        isLoadingCreatePost: true,\r\n        createPostError: null\r\n      };\r\n\r\n    case ActionTypes.CREATE_POST_RESULT:\r\n      return {\r\n        ...state,\r\n        isLoadingCreatePost: false,\r\n        createPostError: action.error,\r\n        linkTo: action.error ? false : true,\r\n      };\r\n\r\n    case ActionTypes.CLEAR_CREATE_ERR:\r\n      return {\r\n        ...state,\r\n        createPostError: null,\r\n        linkTo: false,\r\n      };\r\n\r\n    case ActionTypes.DELETE_POST:\r\n      return {\r\n        ...state,\r\n        isLoadingDeletePost: true\r\n      };\r\n\r\n    case ActionTypes.DELETE_POST_RESULT:\r\n      return {\r\n        ...state,\r\n        isLoadingDeletePost: false,\r\n        deletePostError: action.error,\r\n        isRequestAgain: !state.isRequestAgain,\r\n        linkTo: action.error ? false : true,\r\n      };\r\n\r\n    case ActionTypes.CLEAR_DELETE_ERROR:\r\n      return {\r\n        ...state,\r\n        deletePostError: null,\r\n        linkTo: false,\r\n      };\r\n\r\n    case ActionTypes.UPDATE_POST:\r\n      return {\r\n        ...state,\r\n        isLoadingUpdatePost: true,\r\n        updatePostError: null\r\n      };\r\n\r\n    case ActionTypes.UPDATE_POST_RESULT:\r\n      return {\r\n        ...state,\r\n        isLoadingUpdatePost: false,\r\n        updatePostError: action.error,\r\n        isRequestAgain: !state.isRequestAgain,\r\n      };\r\n\r\n    // CATEGORY\r\n    case ActionTypes.CREATE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        isLoadingCreateCategory: true,\r\n        createCategoryError: null\r\n      };\r\n\r\n    case ActionTypes.CREATE_CATEGORY_RESULT:\r\n      return {\r\n        ...state,\r\n        isLoadingCreateCategory: false,\r\n        createCategoryError: action.error,\r\n        // linkTo: action.error ? false : true,\r\n      };\r\n\r\n    case ActionTypes.GET_CATEGORY_LIST:\r\n      return {\r\n        ...state,\r\n        isLoadingGetCategory: true,\r\n        getCategoryError: null\r\n      };\r\n\r\n    case ActionTypes.GET_CATEGORY_LIST_RESULT:\r\n      return {\r\n        ...state,\r\n        isLoadingGetCategory: false,\r\n        getCategoryError: action.error,\r\n        categoryList: action.list || []\r\n        // linkTo: action.error ? false : true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport { postReducer, defaultState };\r\n","import { combineReducers } from \"redux\";\n// import { sessionReducer } from 'redux-react-session';\nimport { authReducer as auth } from \"./auth\";\nimport { postReducer as post } from \"./post\";\n\nconst reducer = combineReducers({\n  auth,\n  post,\n  // session: sessionReducer,\n});\n\nexport default reducer;\n","import axios from \"axios\";\naxios.defaults.withCredentials = true\n\n// const instance = axios.create({ \n//   baseURL: 'http://localhost:3006',\n//   crossdomain: true,\n// });\n// const instance = axios.create({ baseURL: 'http://api-tour.julypenguin.tw:80' });\nconst instance = axios.create({ baseURL: 'http://localhost:3006' });\n\nexport const createPost = (values) => instance.post(\"/apiposts\", values);\nexport const getPost = id => instance.get(\"/apiposts/\" + id);\nexport const getPostList = () => instance.get(\"/apiposts\");\nexport const deletePost = (id)=> instance.delete(\"/api/\" + id);\nexport const updatePost = (id, value) => instance.put(\"/apiposts/\" + id, value);\nexport const register = user => instance.post(\"/apiregister\", user);\nexport const login = user => instance.post(\"/apilogin\", user);\n\nexport const logout = () => instance.get(\"/apilogout\");\n\nexport const getUser = () => instance.get(\"/apiuserInfo\");\n\nexport const createCategory = (values) => instance.post(\"/apicategory\", values);\nexport const getCategoryList = () => instance.get(\"/apicategory\");\n\n","import { ofType } from \"redux-observable\";\nimport { of, from } from \"rxjs\";\nimport { catchError, map, switchMap } from \"rxjs/operators\";\nimport { ActionTypes, Actions } from \"../actions\";\nimport * as api from \"../api\";\n\nexport const getPostList = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.GET_POST_LIST),\n    switchMap(action =>\n      from(api.getPostList(action.payload)).pipe(\n        map(res =>\n          Actions.GET_POST_LIST_RESULT(null, res.data, action.payload)\n        ),\n        catchError(err => of(Actions.GET_POST_LIST_RESULT(err.message)))\n      )\n    )\n  );\n\nexport const getPost = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.GET_POST),\n    switchMap(action =>\n      from(api.getPost(action.id)).pipe(\n        map(res => Actions.GET_POST_RESULT(null, res.data, action.payload)),\n        catchError(err => of(Actions.GET_POST_RESULT(err.message)))\n      )\n    )\n  );\n\nexport const createPost = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.CREATE_POST),\n    switchMap(action =>\n      from(api.createPost(action.payload)).pipe(\n        map(() => Actions.CREATE_POST_RESULT(null)),\n        catchError(err => of(Actions.CREATE_POST_RESULT(err.message)))\n      )\n    )\n  );\n\nexport const deletePost = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.DELETE_POST),\n    switchMap(action =>\n      from(api.deletePost(action.id)).pipe(\n        map(() => Actions.DELETE_POST_RESULT(null)),\n        catchError(err => of(Actions.DELETE_POST_RESULT(err.message)))\n      )\n    )\n  );\n\nexport const updatePost = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.UPDATE_POST),\n    switchMap(action =>\n      from(api.updatePost(action.id, action.payload)).pipe(\n        map(() => Actions.UPDATE_POST_RESULT(null)),\n        catchError(err => of(Actions.UPDATE_POST_RESULT(err.message)))\n      )\n    )\n  );\n\n  // Category\nexport const createCategory = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.CREATE_CATEGORY),\n    switchMap(action =>\n      from(api.createCategory(action.payload)).pipe(\n        map(() => Actions.CREATE_CATEGORY_RESULT(null)),\n        catchError(err => of(Actions.CREATE_CATEGORY_RESULT(err.message)))\n      )\n    )\n  );\n\nexport const getCategoryList = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.GET_CATEGORY_LIST),\n    switchMap(action =>\n      from(api.getCategoryList(action.payload)).pipe(\n        map((res) => Actions.GET_CATEGORY_LIST_RESULT(null, res.data, action.payload)),\n        catchError(err => of(Actions.GET_CATEGORY_LIST_RESULT(err.message)))\n      )\n    )\n  );","import { ofType } from \"redux-observable\";\nimport { of, from } from \"rxjs\";\nimport { catchError, map, mergeMap } from \"rxjs/operators\";\n\nimport { ActionTypes, Actions } from \"../actions\";\nimport * as api from \"../api\";\n\nexport const registerEpic = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.REGISTER),\n    mergeMap(action =>\n      from(api.register(action.user)).pipe(\n        map(() => Actions.REGISTER_RESULT(\"success\")),\n        catchError(error => of(Actions.REGISTER_RESULT(error.message)))\n      )\n    )\n  );\n\n  export const loginEpic = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.LOGIN),\n    mergeMap(action =>\n      from(api.login(action.user)).pipe(\n        map((res) => Actions.LOGIN_RESULT(null, res.data, action.payload)),\n        catchError(error => of(Actions.LOGIN_RESULT(error.message)))\n      )\n    )\n  );\n\nexport const logout = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.LOGOUT),\n    mergeMap(action =>\n      from(api.logout(action.payload)).pipe(\n        map((res) => Actions.LOGOUT_RESULT(null, res.data, action.payload)),\n        catchError(error => of(Actions.LOGOUT_RESULT(error.message)))\n      )\n    )\n  );\n\n  export const getUserEpic = action$ =>\n  action$.pipe(\n    ofType(ActionTypes.GET_USER),\n    mergeMap(action =>\n      from(api.getUser(action.payload)).pipe(\n        map((res) => Actions.GET_USER_RESULT(null, res.data, action.payload)),\n        catchError(error => of(Actions.GET_USER_RESULT(error.message)))\n      )\n    )\n  );\n\n// export const getCurrentUser = action$ =>\n//   action$.pipe(\n//     ofType(ActionTypes.GET_CURRENT_USER),\n//     mergeMap(action =>\n//       from(api.getUser()).pipe(\n//         map(resp => Actions.SET_USER(resp.data)),\n//         catchError(error => of(Actions.GET_USER_FAILED(error)))\n//       )\n//     )\n//   );\n","import { combineEpics } from \"redux-observable\";\nimport { keysIn } from \"lodash\";\nimport * as postEpics from \"./postEpics\";\nimport * as authEpics from \"./authEpics\";\n\nconst combineEpicFunctions = epics => {\n  return epics.reduce((arr, epic) => {\n    return arr.concat(keysIn(epic).map(key => epic[key]));\n  }, []);\n};\n\nconst epics = combineEpicFunctions([\n  authEpics,\n  postEpics,\n]);\n\nexport const rootEpic = combineEpics(...epics);\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { createLogger } from \"redux-logger\";\n\nimport reducers from \"./reducers\";\nimport { rootEpic } from \"./epics\";\n\nconst logger = createLogger({\n  duration:true,\n  collapsed: true,\n});\n\nconst epicMiddleware = createEpicMiddleware();\nconst store = createStore(\n  reducers,\n  applyMiddleware(logger, epicMiddleware)\n);\n\nepicMiddleware.run(rootEpic);\n\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from \"./store\";\nimport './style.css';\nimport './normalize.css';\n// import useSession, { UseSessionProvider } from 'react-session-hook';\n\n// import { sessionService } from 'redux-react-session';\n\n// sessionService.initSessionService(store, { driver: 'COOKIES' });\n\nrender(\n  <Provider store={store}>\n      <App />\n  </Provider>, document.getElementById('root'),\n);\n\n"],"sourceRoot":""}